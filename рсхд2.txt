# Инициализация кластера БД =========================================================

export PGDATA=$HOME/u07/gtx54
export PG_ENCODING=UTF8
export LANG="en_US.UTF-8"

# init cluster
mkdir -p "$PGDATA"
initdb -D $PGDATA --encoding=$PG_ENCODING --locale=$LANG

# Конфигурация и запуск сервера БД ==================================================

set port = 9021 in postgresql.conf

# set same configuration in pg_hba.conf:
TYPE  DATABASE        USER            ADDRESS                 METHOD
local   all             all                                     reject
host    all             all             127.0.0.1/32            md5
host    all             all             ::1/128                 md5
local   replication     all                                     reject
host    replication     all             127.0.0.1/32            md5
host    replication     all             ::1/128                 md5

set "log_min_messages = notice" #in postgresql.conf (logging level)
set "logging_collector = on" 	#in postgresql.conf (collect logs in files)
set "log_connections = on" 		#to log each attempted connection
set "log_duration = on" 		#the duration of every completed statement to be logged

# Additional parameters:
max_connections = 100     		# max_connections: This parameter sets the maximum number of concurrent connections to the PostgreSQL server. A value of 100 should be sufficient for most applications.
shared_buffers = 2GB    		# shared_buffers: This parameter sets the amount of memory used for PostgreSQL's shared buffer cache. A good rule of thumb is to set this to 25% of available RAM. In this case, we've set it to 2GB.
temp_buffers = 16MB    			# temp_buffers: This parameter sets the amount of memory used for temporary buffers. A value of 16MB should be sufficient for most applications.
work_mem = 64MB 				# work_mem: This parameter sets the amount of memory used for each internal sort and hash operation. A value of 64MB should be sufficient for most applications.
checkpoint_timeout = 5min 		# checkpoint_timeout: This parameter sets the time between automatic WAL checkpoints. A value of 5 minutes is a good starting point.
effective_cache_size = 4GB 		# effective_cache_size: This parameter sets the estimated size of the operating system's disk cache. A good rule of thumb is to set this to 75% of available RAM. In this case, we've set it to 4GB.
fsync = on 						# fsync: This parameter controls whether or not PostgreSQL waits for writes to be flushed to disk before acknowledging a transaction commit. Turning this off can improve performance, but increases the risk of data loss in the event of a system failure.
commit_delay = 10000 			# in microseconds # commit_delay: This parameter sets the delay in microseconds between when a transaction is committed and when its changes are actually written to disk. A value of 10,000 microseconds (10 milliseconds) is a good starting point.

pg_ctl start -D $PGDATA

# Дополнительные табличные пространства и наполнение ==============================================

mkdir -p "$HOME/u06/gor27"

psql -d postgres -p 9021 -h 'localhost'
CREATE DATABASE whitecat5 TEMPLATE template0;

psql --set=gor27dir="$HOME/u06/gor27" -d whitecat5 -p 9021 -h 'localhost'
CREATE TABLESPACE gor27_tablespace LOCATION :'gor27dir';
DROP DATABASE postgres;
CREATE DATABASE postgres TEMPLATE template0 TABLESPACE gor27_tablespace;
CREATE USER ivan WITH PASSWORD 'ivan';

\c postgres
CREATE TABLE test1 (test_int int, test_text text) TABLESPACE pg_default;
INSERT INTO test1 values(1, 'asdasdasd');
INSERT INTO test1 values(1, 'dsasdsada');
INSERT INTO test1 values(1, 'aaaaaaaaa');

\c whitecat5
CREATE TABLE test2 (test_int int, test_text text) TABLESPACE gor27_tablespace;
INSERT INTO test2 values(1, 'asdasdasd');
INSERT INTO test2 values(1, 'dsasdsada');
INSERT INTO test2 values(1, 'aaaaaaaaa');

SELECT spcname FROM pg_tablespace;
SELECT relname FROM pg_class WHERE reltablespace = (SELECT oid FROM pg_tablespace WHERE spcname = 'pg_default');
SELECT relname FROM pg_class WHERE reltablespace = (SELECT oid FROM pg_tablespace WHERE spcname = 'pg_global');
SELECT relname FROM pg_class WHERE reltablespace = (SELECT oid FROM pg_tablespace WHERE spcname = 'gor27_tablespace');